
---
apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: appkube-awsx-api-service-smoke
  namespace: tekton-pipelines
spec:
  description: |
    Pipeline to deploy appkube-awsx-api-service predefined GO container is used. 
    GO conainer build is optional, this has to be enabled if there are changes to Dockerfile
  params:
  - name: repo-url
    type: string
    description: AWSX API source repo https://github.com/Appkube-awsx/awsx-api.git
  - name: repo-revision
    type: string
    description: service revision to checkout. (branch, tag, sha, ref, etc...)
  - name: deploy-repo-url
    type: string
    description: deployment repo for awsx-api service - https://github.com/Appkube-awsx/awsx-api-deployment.git
  - name: helm-workingDir-param
    type: string
    description: working directory for helm execution
  - name: helm-release-version-param
    type: string
    description: Release version in helm chart
  - name: helm-release-name-param
    type: string
    description: Helm release name
  - name: helm-release-namespace-param
    type: string
    description: namespace for service installation
  workspaces:
  - name: shared-data
    description: |
      This workspace will receive the cloned git repo and be passed
      to the next Task to list all cloned files and directories.
  - name: shared-data1
    description: |
      This workspace will receive the cloned helm git repo
  - name: dockerconfig-secret
    description: |
      This workspace will have docker config.json
  - name: aws-secrets
    description: |
      This workspace will hold aws credentials
  tasks:
  - name: fetch-repo
    taskRef:
      name: git-clone
    workspaces:
    - name: output
      workspace: shared-data
    params:
    - name: url
      value: $(params.repo-url)
    - name: revision
      value: $(params.repo-revision)
  - name: build-awsx-api
    runAfter: ["fetch-repo"]
    taskRef:
      name: build-awsx-api-task
    workspaces:
    - name: source
      workspace: shared-data
    params:
    - name: workingDir
      value: $(workspaces.source.path)
  - name: build-kaniko
    runAfter: ["build-awsx-api"]
    taskRef:
      name: build-kaniko
    workspaces:
    - name: source
      workspace: shared-data
    - name: dockerconfig
      workspace: dockerconfig-secret
    params:
    - name: IMAGE
      value: synectiks/awsx-api:$(tasks.fetch-repo.results.commit)
    - name: IMAGE2
      value: synectiks/awsx-api:latest
    - name: DOCKERFILE
      value: $(workspaces.source.path)/Dockerfile
    - name: CONTEXT
      value: ./
  # - name: fetch-deployment-repo
  #   runAfter: ["fetch-repo"]
  #   taskRef:
  #     name: git-clone
  #   workspaces:
  #   - name: output
  #     workspace: shared-data1
  #   params:
  #   - name: url
  #     value: $(params.deploy-repo-url)
  #   - name: revision
  #     value: "0.1" 
  # - name: service-deploy-with-helm
  #   runAfter: ["fetch-deployment-repo", "build-kaniko"]
  #   taskRef:
  #     name: helm-appkube-cmdb-install
  #   params:
  #   - name: workingDir
  #     value: $(params.helm-workingDir-param)
  #   - name: release_version
  #     value: $(params.helm-release-version-param)
  #   - name: release_name
  #     value: $(params.helm-release-name-param)
  #   - name: release_namespace
  #     value: $(params.helm-release-namespace-param)
  #   - name: overwrite_values
  #     value: image.tag=$(tasks.fetch-repo.results.commit)
  #   workspaces:
  #   - name: source
  #     workspace: shared-data1
  #   - name: secrets
  #     workspace: aws-secrets
  finally:
    - name: cleanup-on-success
      when:
      - input: $(tasks.status)
        operator: in
        values: ["Succeeded"]
      taskRef:
        name: cleanup-on-success
---
apiVersion: tekton.dev/v1beta1
kind: PipelineRun
metadata:
  name: appkube-awsx-api-service-smoke-run
  namespace: tekton-pipelines
spec:
  pipelineRef:
    name: appkube-awsx-api-service-smoke
  workspaces:
  - name: shared-data
    volumeClaimTemplate:
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
  - name: shared-data1
    volumeClaimTemplate:
      spec:
        accessModes:
        - ReadWriteOnce
        resources:
          requests:
            storage: 1Gi
  - name: dockerconfig-secret
    secret:
      secretName: kaniko-secret
  - name: aws-secrets
    secret:
      secretName: smoke-aws-credentials
  params:
  - name: repo-url
    value: https://github.com/Appkube-awsx/awsx-api.git
  - name: repo-revision
    value: 'docker'
  - name: deploy-repo-url
    value: https://github.com/Appkube-awsx/awsx-api-deployment.git
  - name: helm-release-version-param
    value: 0.1.0
  - name: helm-release-name-param
    value: appkube-awsx-api-service
  - name: helm-release-namespace-param
    value: appkube-awsx-api-service
  - name: helm-workingDir-param
    value: $(workspaces.source.path)/helm